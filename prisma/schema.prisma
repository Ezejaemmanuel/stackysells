generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @unique @default(cuid())
  role      UserRole
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  firstName String?
  userName  String?
  fullName  String?
  imageUrl  String?
  Order     Order[]
  Products  Product[]
  wishlist  Product[] @relation("Wishlist")
}

model Product {
  id                 String            @id @unique @default(cuid())
  title              String
  description        String
  category           ProductCategory
  tags               String[]
  price              Float
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  imagesUrl          String[]
  userId             String
  videoUrl           String[]
  categories         ProductCategory[]
  discountPercentage Float
  jsonDetails        Json[]
  productType        ProductType
  status             ProductStatus
  wishlistedById     String?
  OrderItem          OrderItem[]
  User               User              @relation(fields: [userId], references: [id])
  wishlistedBy       User?             @relation("Wishlist", fields: [wishlistedById], references: [id])
}

model Order {
  id              String      @id @unique @default(cuid())
  shippingAddress Json
  userId          String
  shippingRate    String
  totalAmount     Float
  User            User        @relation(fields: [userId], references: [id])
  products        OrderItem[]
}

model OrderItem {
  id        String  @id @unique @default(cuid())
  productId String
  color     String
  size      String
  quantity  Int
  orderId   String?
  Order     Order?  @relation(fields: [orderId], references: [id])
  Product   Product @relation(fields: [productId], references: [id])
}

enum ProductCategory {
  Clothing
  Housing
  Electronics
  BeautyHealth
  Sports
  Toys
  Books
  Cleaning
  Tutoring
  Repair
  PersonalTraining
  Photography
  Catering
  EventPlanning
}

enum UserRole {
  Buyer
  OneTimeSeller
  ContinuousSeller
  Admin
  SuperAdmin
}

enum ProductStatus {
  justCreated
  beingReviewed
  confirmedAndAvailbleForBuy
  notConfirmedButAvailableForBuy
  beingSoldInProgress
  soldOut
  shouldBeDeleted
}

enum ProductType {
  goods
  services
}
