datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ProductCategory {
  Clothing
  Housing
  Electronics
  BeautyHealth
  Sports
  Toys
  Books
  Cleaning
  Tutoring
  Repair
  PersonalTraining
  Photography
  Catering
  EventPlanning
}

enum UserRole {
  Buyer
  OneTimeSeller
  ContinuousSeller
  Admin
  SuperAdmin
}

model Product {
  id                 String            @id @unique @default(cuid())
  title              String
  description        String
  imagesUrl          String[]
  videoUrl           String[]
  category           ProductCategory
  categories         ProductCategory[]
  tags               String[]
  price              Float
  discountPercentage Float
  productType        ProductType
  jsonDetails        Json[]
  status             ProductStatus
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  OrderItem          OrderItem[]
  userId             String // Foreign key for User
  User               User              @relation(fields: [userId], references: [id]) // Relation to User
}

enum ProductStatus {
  justCreated
  beingReviewed
  confirmedAndAvailbleForBuy
  notConfirmedButAvailableForBuy
  beingSoldInProgress
  soldOut
  shouldBeDeleted
}

enum ProductType {
  goods
  services
}

model User {
  id        String    @id @unique @default(cuid())
  userName  String?
  firstName String?
  email     String    @unique
  role      UserRole
  wishlist  String[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Order     Order[]
  Products  Product[] // Relation to Product
}

model Order {
  id              String      @id @unique @default(cuid())
  shippingAddress Json
  userId          String
  products        OrderItem[]
  shippingRate    String
  totalAmount     Float
  User            User        @relation(fields: [userId], references: [id])
}

model OrderItem {
  id        String  @id @unique @default(cuid())
  productId String
  color     String
  size      String
  quantity  Int
  Product   Product @relation(fields: [productId], references: [id])
  Order     Order?  @relation(fields: [orderId], references: [id])
  orderId   String?
}
